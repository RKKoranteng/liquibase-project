# @name: azure-pipelines.yml
# @description: ADO pipeline

appendCommitMessageToRunName: false
  
name: $(BuildName)

variables:
- template: db-variables.yml

stages:
- stage: dev
  displayName: "Dev Environment"
  jobs:
  
    # check if server is online
    - job: ServerAvailability
      displayName: "Server Availability"
      pool:
        name: 'Azure Pipelines'
      steps:

        - task: PowerShell@2
          inputs:
            targetType: 'inline'
            script: |          
              echo "build artifact"
          displayName: "dev - task 1"

- stage: test
  displayName: "Test Environment"
  dependsOn: dev
  condition: succeeded()
  jobs:
    - job: InstallJob
      displayName: "Installing SQLServer"
      pool:
        name: 'Azure Pipelines'
      steps:

        - task: PowerShell@2
          inputs:
            targetType: 'inline'
            script: |          
              echo "build artifact"
          displayName: "test - task 1"


- stage: prod
  displayName: "Prod Environment"
  dependsOn: test
  condition: succeeded()
  jobs:
    - job: SQLAgentJob
      displayName: "SQL Agent Jobs"
      pool:
        name: 'Azure Pipelines'
      steps:

        - task: PowerShell@2
          inputs:
            targetType: 'inline'
            script: |          
              echo "build artifact"
          displayName: "prod - task 1"


- stage: rollback
  displayName: "Rollback"
  dependsOn: dev
  condition: failed()
  jobs:
    - job: RollbackJob
      displayName: "Cleaning Failed Installed"
      pool:
        name: 'Azure Pipelines'
      steps:

        - task: PowerShell@2
          inputs:
            targetType: 'inline'
            script: |          
              echo "build artifact"
          displayName: "rollback - task 1"


- stage: post-deploymentg
  displayName: "Post Deployment"
  dependsOn: prod
  condition: always()
  jobs:

    # create & load artifacts
    - job: Artifacts
      displayName: "Artifacts"
      pool:
        name: 'Azure Pipelines'
      steps:

        # create artifacts
        - task: PowerShell@2
          inputs:
            targetType: 'inline'
            script: |          
              echo "build artifact"
          displayName: "Create Artifact"

        # load artifacts
        - task: PowerShell@2
          inputs:
            targetType: 'inline'
            script: |          
              echo "load artifact"
          displayName: "Upload Artifact"    

    # rename build
    - job: RenameBuild
      displayName: "Rename Build"
      pool:
        name: 'Azure Pipelines'
      steps:

        # rename build
        - task: PowerShell@2
          inputs:
            targetType: 'inline'
            script: |          
              $BuildName = ( '${{ parameters.servername }}' + " - SQL Server " + '${{ parameters.sqlserverversion }}' )
              Write-Host "##vso[build.updatebuildnumber]$BuildName"
          displayName: "Rename Build"
