# @name: azure-pipelines.yml
# @description: ADO pipeline

#trigger:
#  branches:
#    include:
#      - main
#  paths:
#    include:
#      - changelog.xml

appendCommitMessageToRunName: false
  
name: $(Application.Name)-$(Build.BuildId)-CI

pool:
  name: $(Agent.PoolName)

variables:
- template: variables.yml

stages:
- stage: CI
  displayName: 'Build'
  jobs:
  - job: DB_CI
    displayName: 'Database CI'
    steps:

    - checkout: self

    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |
          Write-Host "Checking Liquibase version"
          & "$(LIQUIBASE_DIR)\liquibase.bat" --version
      displayName: 'Check Liquibase Version'

    - script: |
        liquibase --changeLogFile=$(LIQUIBASE_CHANGELOG_FILE)
      workingDirectory: $(Build.SourcesDirectory)/liquibase
      displayName: 'Validate Changelog'

    - script: |
        liquibase --changeLogFile=$(LIQUIBASE_CHANGELOG_FILE) status --verbose
      workingDirectory: $(Build.SourcesDirectory)/liquibase
      displayName: 'Show Pending Changesets'

    - script: |
        liquibase --changeLogFile=$(LIQUIBASE_CHANGELOG_FILE) updateSql > update-preview.sql
      workingDirectory: $(Build.SourcesDirectory)/liquibase
      displayName: 'Generate SQL Preview'

    - task: ArchiveFiles@2
      displayName: 'Archive Liquibase Changelogs'
      inputs:
        rootFolderOrFile: '$(Build.SourcesDirectory)/liquibase'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/liquibase-release.zip'
        replaceExistingArchive: true

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Liquibase Artifact'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'liquibase-drop'
 
          