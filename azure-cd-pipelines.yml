# @name: azure-cd-pipelines.yml
# @description: ADO CD pipeline for Oracle DB deployment using Liquibase
# @author: Richard Koranteng (https://rkkoranteng.com)
# @changes: refer to CHANGELOG.md

#trigger:
#  branches:
#    include:
#      - main
#  paths:
#    include:
#      - changelog.xml

trigger: none

appendCommitMessageToRunName: false
  
name: $(Database.SID)-$(Build.BuildId)-CD

pool:
  name: $(Agent.PoolName)

variables:
- template: variables.yml

resources:
  pipelines:
    - pipeline: DB_CI          
      source: Database_CI
      trigger:
        branches:
          include:
            - main

stages:

# test
# is this safe to deploy in our environments
- stage: testing
  displayName: 'Tests'
  jobs:
  - deployment: Tests
    environment: 'staging'
    strategy:
      runOnce:
        deploy:
          steps:

          - task: DownloadPipelineArtifact@2
            inputs:
              source: specific
              project: $(System.TeamProject)
              pipeline: Database_CI
              runVersion: latest
              artifact: db-ci-artifact
              path: $(Pipeline.Workspace)

          # this task reviews the SQL statements that will be executed against the database before actually applying them
          - task: PowerShell@2
            inputs:
              targetType: 'inline'
              script: | 
                $URL = "jdbc:oracle:thin:@//$(Database.Host):$(Database.Port)/$(Database.SID)"
                & "$(L_DIR)\liquibase.bat" `
                  --changeLogFile=$(L_CHANGELOG_FILE) `
                  --url=$URL `
                  --username="$(dev.username)" `
                  --password="$(dev.password)" `
                  updateSql > cd-update-preview.sql
              workingDirectory: $(Pipeline.Workspace)
            displayName: 'Generate SQL Preview'
            
          # this task reviews the SQL statements that will be executed against the database before actually applying them
          # this task checks dev environment
          - task: PowerShell@2
            inputs:
              targetType: 'inline'
              script: | 
                $URL = "jdbc:oracle:thin:@//$(Database.Host):$(Database.Port)/$(Database.SID)"
                & "$(L_DIR)\liquibase.bat" `
                  --changeLogFile=$(L_CHANGELOG_FILE) `
                  --url=$URL `
                  --username="$(dev.username)" `
                  --password="$(dev.password)" `
                  rollbackSql 1 > cd-rollback-preview.sql
              workingDirectory: $(Pipeline.Workspace)
            displayName: 'Generate Rollback SQL Preview'
            
          # this task states the number of undeployed changesets
          - task: PowerShell@2
            inputs:
              targetType: 'inline'
              script: | 
                $URL = "jdbc:oracle:thin:@//$(Database.Host):$(Database.Port)/$(Database.SID)"
                & "$(L_DIR)\liquibase.bat" `
                  --changeLogFile=$(L_CHANGELOG_FILE) `
                  --url=$URL `
                  --username="$(dev.username)" `
                  --password="$(dev.password)" `
                  status --verbose > cd-undeployed-changes.log
              workingDirectory: $(Pipeline.Workspace)
            displayName: 'Show Pending Changesets'

# deploy to staging
- stage: staging
  displayName: 'Deploy to Staging'
  dependsOn: testing
  condition: succeeded()
  jobs:
  - deployment: Deploy_Staging
    environment: 'staging'
    strategy:
      runOnce:
        deploy:
          steps:

          - task: DownloadPipelineArtifact@2
            inputs:
              source: specific
              project: $(System.TeamProject)
              pipeline: Database_CI
              runVersion: latest
              artifact: db-ci-artifact
              path: $(Pipeline.Workspace)

          - task: PowerShell@2
            displayName: 'Liquibase Update'
            inputs:
              targetType: 'inline'
              script: |
                $URL = "jdbc:oracle:thin:@//$(Database.Host):$(Database.Port)/$(Database.SID)"
                & "$(L_DIR)\liquibase.bat" `
                  --changeLogFile=$(L_CHANGELOG_FILE) `
                  --url=$URL `
                  --username="$(dev.username)" `
                  --password="$(dev.password)" `
                  update
              workingDirectory: $(Pipeline.Workspace)

# deploy to prod
- stage: prod
  displayName: 'Deploy to Prod'
  dependsOn: staging
  condition: succeeded()
  jobs:
  - deployment: Deploy_Prod
    environment: 'prod'
    strategy:
      runOnce:
        deploy:
          steps:

          - task: DownloadPipelineArtifact@2
            inputs:
              source: specific
              project: $(System.TeamProject)
              pipeline: Database_CI
              runVersion: latest
              artifact: db-ci-artifact
              path: $(Pipeline.Workspace)

          - task: PowerShell@2
            displayName: 'Liquibase Update'
            inputs:
              targetType: 'inline'
              script: |
                $URL = "jdbc:oracle:thin:@//$(Prod.Host):$(Prod.Port)/$(Prod.SID)"
                & "$(L_DIR)\liquibase.bat" `
                  --changeLogFile=$(L_CHANGELOG_FILE) `
                  --url=$URL `
                  --username="$(prod.username)" `
                  --password="$(prod.password)" `
                  update
              workingDirectory: $(Pipeline.Workspace)